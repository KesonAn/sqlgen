// Code generated by sqlgen. DO NOT EDIT!

package model

import (
	"context"
	"database/sql"
	"fmt"
	"time"
)

// UserModel represents a user model.
type UserModel struct {
	scanner Scanner
	db      sql.Conn
}

// User represents a user struct data.
type User struct {
	Id         uint64
	Name       string
	Password   string
	Mobile     string
	Gender     string
	Nickname   string
	Type       int8
	CreateTime time.Time
	UpdateTime time.Time
}

func (m *UserModel) SetScanner(scanner Scanner) {
	m.scanner = scanner
}

// Insert creates  user data.
func (m *UserModel) Insert(ctx context.Context, data ...*User) error {
	if len(data) == 0 {
		return fmt.Errorf("data is empty")
	}

	stmt, err := m.db.PrepareContext(ctx, "INSERT INTO `user` (`name`, `password`, `mobile`, `gender`, `nickname`, `type`, `create_time`, `update_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?)")
	if err != nil {
		return err
	}
	defer stmt.Close()

	for _, v := range data {
		_, err = stmt.ExecContext(ctx, v.Name, v.Password, v.Mobile, v.Gender, v.Nickname, v.Type, v.CreateTime, v.UpdateTime)
		if err != nil {
			return err
		}
	}

	return nil
}
